**Argomenti fondamentali:**
- **Variabili**: 
    -> dichiarazione: per dichiarare una variabile Java di scrive il suo tipo seguito dal nome della variabile.
    Le variabili sono tipizzate: int,float,double,char,String..... e il tipo della variabile deve corrispondere al tipo
    di dato che vogliamo inserirci;
    -> inizializzazione: prima di poterla usare bisgna inizializzarla. Se non le do io un parametro di inizio, se non le viene passato da
    nessun metodo (es. Scanner per l'input) Java le attribuirà un parametro di defoult;
    -> scope: lo scope della variabile è la regione del codice dove la variabile è accessibile e può essere usata.
    Esistono 4 tipi di scope: 1. Ambito di blocco(variabili dichiarate all'interno di un blocco di codice {} e sono visibili solo 
    lì dentro.);
                              2. Ambito di metodo(variabili dichiarate solo all'interno di un metodo e visibili solo lì dentro e la
                              variabile viene eliminata quando finisce il metodo);
                              3. Ambito di classe(dichiarate all'interno della classe ma fuori da qualunque metodo);
                              4. Ambito globale/variabile globale(variabili di istanza, per Java, sono accessibili a tutti i metodi) 
    -> Naming convention: il nome di una variabile non può contenere delle kw di Java e deve essere univoco all'interno dello scope.

- **Tipi di dato**: 
    ->primitivi (int, double, boolean, char) e reference types (String)
    ->non primitvi: String,Array... gli oggetti 

- **Operatori**: 
    -> aritmetici (+, -, *, /, %),
    -> logici (&&, ||, !), 
    -> di confronto (==, !=, <, >)

- **Casting**: 
    ->conversione implicita tra i tipi: avviene automaticamente quando si passa da un tipo ad un altro (int->double)
    ->conversione esplicita tra i tipi: deve essere specificata con un casting, si converte un tipo double in un int (da un tipo più
    grande a uno più piccolo) double myDouble = 5.5;
    \\\\\\\\\\\\\             int myInt=(int) myDouble; -->casting esplicitato. il .5 viene troncato

**Interazione con l'utente:**
- **Input**: `Scanner` per leggere da tastiera --> Scanner scan = scanner(system.in); 
                                                    Scan = new scanner(s);
                                                    Sysstem.out.print(scan.nextLine()); -> caso di una stringa
- **Output**: `System.out.println()` e `System.out.print()` per stampare a video
                    |                           |
                    |                           |
                    V                           V
                Stampa tutta la linea       Stampa solo il carattere
                non solo il carattere
                    |_ posso usarlo anche per andare a capo


**EX - Password Generator JAVA**
nome del repo: java-password-generator

Creare un nuovo progetto java chiamato java-password-generator
Aggiungere un package org.lessons.java.security
Aggiungere una classe PasswordGenerator che contiene un metodo main

Il programma deve fare quanto segue:
- salvare in opportune variabili il nome, cognome, colore preferito e data di nascita di un utente suddivisa in giorno, mese e anno in numero
- generare (e stampare a video) una password concatenando nome, cognome, colore preferito e somma di giorno, mese e anno di nascita, separate dal carattere -

*Esempio: ho un utente che si chiama Pinco Pallo, nato il 12/05/1994, il cui colore preferito è il magenta
La sua password sarà Pinco-Pallo-magenta-2011*


----------------------------------------------------------------------------------------------------------------------------------
## Java Base 2
**Strutture di controllo:**
- **Istruzioni condizionali**: if/else
    if(condizione){
        blocco da eseguire se condizione = true;
    } else if(condizione2){
        blocco da eseguire se condizione=false ma condizione2=true
    } else {
        blocco da eseguire se condizione2=false
    }

- **Array**: 
    -> dichiarazione: tipo di dato seguito da [] e il nome ---> int[] arrayNum;
    -> allocaizone: int[] arrayNum = new int [5]--->array di 5 elementi
    -> inizializzazione: int [] arrayNum = {3,24,6,7,34}--> inserisco i valori che occupano i 5 spazi del mio array
    -> accesso agli elementi: si accede per posizione -->  arrayNum = [3] ---> 7,
    -> proprietà length: mi restituisce la lunghezza del mio array
- **Cicli**: for (tradizionale e foreach)
    -> for tradizionale: mi serve in generare per ripetere la stessa azione n volte, finchè la mia condizione è vera.
    for(inizializzazione; condizione; aggiornamento){
            int i = 0;    i < 5;       i++
        blocco da eseguire
    }

    DEBUG: inizio con i=0... i(0) è < 5? si, esegui il blocco, incrementa e ricomincia.
    i = 1, è < 5 ? si, esegue il blocco e incrementa.
    i = 2, è < 5 ? si, esegue il blocco e incrementa.
    i = 3, è < 5 ? si, esegue il blocco e incrementa.
    i = 4, è < 5 ? si, esegue il blocco è incrementa.
    i = 5, è < 5? no. chiude il ciclo.

    **Stampa i numeri da 1 a 10.
    for(int i = 1; i <= 10; i++){
        System.out.print(i);
    }
    |
    |--> 1
         2
         3
         4
         5
         6
         7
         8
         9
         10
    ->for-each: si usa per scorrere gli elementi di una collezione -> array,List,ArrayList...
    for(tipo variabile : collezione){
        blocco da eseguire
    }

    int[] numeri = {10,20,25,30};
    for(int n : numeri){
        Sysout.println(n);
    }
    |
    |--> 10
         20
         25
         30

    String[] iscritti = {"Marco", "Paolo", "Anna"};
    for(String iscritto : iscritti){
        Sysout.println("il nome dello studente è: " + iscritto);
    }
    |
    |--> il nome dello studente è:Marco
         il nome dello studente è:Paolo
         il nome dello studente è:Anna


**EX - Festa Ferragnez**
nome repo: java-festa-ferragnez

State lavorando col servizio di sicurezza dei Ferragnez e il vostro compito è di assicurarvi che accedano alla festa solo gli invitati presenti sulla lista.

**Consegna:**
Creare un progetto java-festa-ferragnez con il package com.ferragnez.party, a cui aggiungere la classe CheckGuest

Nel programma bisogna:
- creare e inizializzare l'array contenente i nomi degli invitati
- chiedere all'utente come si chiama
- verificare che il nome sia presente nella lista
- lasciarlo entrare o rispedirlo cortesemente da dove è venuto ��️

**Bonus:**
Se avete usato il ciclo for per cercare il nome nella lista, implementare lo stesso programma usando il ciclo while, e viceversa

*Lista invitati:
Dua Lipa, Paris Hilton, Manuel Agnelli, J-Ax, Francesco Totti, Ilary Blasi, Bebe Vio, Luis, Pardis Zarei, Martina Maccherone, Rachel Zeilic*
